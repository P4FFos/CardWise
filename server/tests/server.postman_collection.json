{
	"info": {
		"_postman_id": "0f87dedd-3e68-4c89-adae-c96895cf6621",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38335183"
	},
	"item": [
		{
			"name": "GET /api",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/api",
					"host": [
						"{{host}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /api/decks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(pm.response.text());\r",
							"pm.environment.set(\"deck_id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Resource is CREATED\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Deck name is not empty.\", function(){\r",
							"    pm.expect(jsonData.name).not.eql(null);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Fire\",\r\n    \"cards\": [\r\n        {\r\n            \"content\": \"Big fire\",\r\n            \"explanation\": \"Lava\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/decks",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"decks"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /api/decks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is CREATED\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains deck(s)\", function(){\r",
							"    var jsonInfo = pm.response.json();\r",
							"    pm.expect(jsonInfo.decks).to.be.an(\"array\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/decks",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"decks"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /api/decks/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is CREATED\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/decks/{{deck_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"decks",
						"{{deck_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /api/decks/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is CREATED\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request should change the name of the deck\", function(){\r",
							"    var jsonInfo = pm.response.json();\r",
							"    pm.expect(jsonInfo.name).to.eql(\"Succesfull Patch\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Succesfull Patch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/decks/{{deck_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"decks",
						"{{deck_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT /api/decks/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonInfo = pm.response.json();\r",
							"console.log(jsonInfo);\r",
							"pm.test(\"Request is CREATED\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request should change the name of the deck\", function(){\r",
							"    pm.expect(jsonInfo.name).to.eql(\"Succesfull Name Change\");\r",
							"});\r",
							"\r",
							"pm.test(\"Request should change the content of the card\", function(){\r",
							"    pm.expect(jsonInfo.cards[0].content).to.eql(\"Succesfull Content Change\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Request should change the explanation of the card\", function(){\r",
							"    pm.expect(jsonInfo.cards[0].explanation).to.eql(\"Succesfull Explanation Change\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Succesfull Name Change\",\r\n    \"cards\": [\r\n        {\r\n            \"content\": \"Succesfull Content Change\",\r\n            \"explanation\": \"Succesfull Explanation Change\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/decks/{{deck_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"decks",
						"{{deck_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /api/decks/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Request is CREATED\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/decks/{{deck_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"decks",
						"{{deck_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /api/decks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content has been deleted\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/decks",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"decks"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "card_id",
			"value": "1"
		}
	]
}